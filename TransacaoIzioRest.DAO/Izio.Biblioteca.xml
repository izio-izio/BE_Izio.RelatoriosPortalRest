<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Izio.Biblioteca</name>
    </assembly>
    <members>
        <member name="M:Izio.Biblioteca.AzureBlob.UploadFileBase64(System.Object,System.String,System.Boolean)">
            <summary>
            Upload de arquivo em base 64 para o Azure Blob
            </summary>
            <param name="dadosAzure"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Izio.Biblioteca.AzureBlob.DeleteFileBase64(System.Object,System.String)">
            <summary>
            Deleta o arquivo no Azure Blob
            </summary>
            <param name="dadosAzure"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Izio.Biblioteca.AzureBlob.uploadFileAzure(System.Object,System.Object,System.Boolean)">
            <summary>
            Realiza o upload do arquivo no Azure Blob Service
            </summary>
            <param name="dadosAzure"></param>
            <param name="objConfigCliente"></param>
            <returns></returns>
        </member>
        <member name="M:Izio.Biblioteca.AzureBlob.DeleteFileAzure(System.Object,System.Object)">
            <summary>
            Realiza o delete do arquivo no Azure Blob Service
            </summary>
            <param name="des_url_file_azure_blob"></param>
            <returns></returns>
        </member>
        <member name="T:Izio.Biblioteca.ListaErros">
            <summary>
            Retorna objeto com os erros ocorridos
            </summary>
        </member>
        <member name="T:Izio.Biblioteca.Erros">
            <summary>
            Classe para armazenar erros
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.Erros.code">
            <summary>
            Código do erro
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.Erros.message">
            <summary>
            Mensagem de erro
            </summary>
        </member>
        <member name="T:Izio.Biblioteca.ApiSuccess">
            <summary>
            Classe para retorno de sucesso
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.ApiSuccess.code">
            <summary>
            Código do sucesso
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.ApiSuccess.message">
            <summary>
            Mensagem
            </summary>
        </member>
        <member name="M:Izio.Biblioteca.DAO.ParametroDAO.ListarParametros(System.String)">
            <summary>
            Metodo responsavel por buscar parametros na base do cliente no modelo de chave-valor (parametros separados por virgula sem espaço)
            </summary>
            <param name="chaves">string de chaves, podendo ser multivalorado separado por virgula sem espaço</param>
        </member>
        <member name="T:Izio.Biblioteca.Dominio.OperadorLogico">
            <summary>
            Enum utilizado para domínio de Operadores Lógicos
            </summary>
        </member>
        <member name="F:Izio.Biblioteca.Dominio.OperadorLogico.E">
            <summary>
            COMBINAÇÃO E" ITENS
            </summary>
        </member>
        <member name="F:Izio.Biblioteca.Dominio.OperadorLogico.OU">
            <summary>
            COMBINAÇÃO "OU" ITENS
            </summary>
        </member>
        <member name="F:Izio.Biblioteca.Dominio.OperadorLogico.MENOS">
            <summary>
            SUBTRAÇÃO DE ITENS
            </summary>
        </member>
        <member name="M:Izio.Biblioteca.EncurtadorUrl.EncurtarUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Método utilizado para encurtar url utilizadno o rebrandly
            </summary>
            <param name="url">URL a ser encurtada</param>
            <param name="dominio">dominio dentro do rebrandly</param>
            <param name="apiKey">chave de acesso, informar somente caso seja a utilizada diferente da padrão</param>
            <param name="WORKSPACE_ID">workspace</param>
            <returns>Tendo como retorno uma url encurtada</returns>
        </member>
        <member name="P:Izio.Biblioteca.ExecucaoMultiBase.ParametroExecucaoCustomizada.isUtilizarToken">
            <summary>
            Indicador se o contrutor da classe utiliza token
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.ExecucaoMultiBase.ParametroExecucaoCustomizada.paramMetodoExecutar">
            <summary>
            propriedade opcional para receber os parametros que serão utilizados na execução do metodo
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.ExecucaoMultiBase.ParametroExecucaoCustomizada.sqlConsultaCliente">
            <summary>
            propriedade opcional para consultar clientes de forma customizada
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.ExecucaoMultiBase.ParametroExecucaoCustomizada.numExecucaoParallelForeach">
            <summary>
            propriedade opcional para limitar o numero de execuções simultaneas (valor padrão 10)
            </summary>
        </member>
        <member name="M:Izio.Biblioteca.ExportacaoArquivo.ExportarArquivo``1(System.String,System.Collections.Generic.IEnumerable{``0},System.String,System.String,Izio.Biblioteca.TipoArquivoExportacao,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,System.String,System.Boolean)">
            <summary>
            Metodo responsavel por gerar arquivo no formato csv e encaminhar por email
            </summary>
            <remarks>
            tag  necessaria no web.config (add key="DirExportacao" value="C:\Temp\Izio\")
            </remarks>
            <typeparam name="T"></typeparam>
            <param name="NomeCliente">Nome do cliente</param>
            <param name="listaDados">objeto a ser exportado</param>
            <param name="des_email">email para enviar a url do arquivo</param>
            <param name="nomeArquivo">Propriedade opcional para informar o nome do arquivo</param>
            <param name="tipoExportacao">Enumerador de Tipo de Arquivo de Exportação</param>
            <param name="retornaUrlArquivo">Caso o valor seja true retornará apenas a URL do arquivo CSV e nao enviará o email.</param>
            <param name="cod_usuario">Código do usuário que solicitou a exportação.</param>
            <param name="password">Senha para proteger o arquivo excel.</param>
        </member>
        <member name="T:Izio.Biblioteca.Model.ApiErrors">
            <summary>
            Retorna objeto com os erros ocorridos
            </summary>
        </member>
        <member name="T:Izio.Biblioteca.Model.Erros">
            <summary>
            Classe que retornas as lista de erros 
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.Model.Erros.code">
            <summary>
            Código do Erro 
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.Model.Erros.message">
            <summary>
            Descriçao do Erro 
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.Model.ApiSuccess.payload">
            <summary>
            Objeto de Sucesso
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.Model.Sucesso.code">
            <summary>
            Código do sucesso
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.Model.Sucesso.message">
            <summary>
            Mensagem
            </summary>
        </member>
        <member name="T:Izio.Biblioteca.Model.DadosLog">
            <summary>
            Classe para gravação do log
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.Model.DadosLog.des_erro_tecnico">
            <summary>
            Descrição do erro tecnico (sislog.info_tecnicas)
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.Model.DadosLog.cod_usuario">
            <summary>
            Codigo do usuario
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.Model.DadosLog.cod_menu">
            <summary>
            Campo deprecado - informar 0
            </summary>
        </member>
        <member name="T:Izio.Biblioteca.Model.DadosParametro">
            <summary>
            Dados do parametro
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.Model.DadosParametro.des_chave">
            <summary>
            Código único
            </summary>
        </member>
        <member name="P:Izio.Biblioteca.Model.DadosParametro.des_valor">
            <summary>
            valor
            </summary>
        </member>
        <member name="T:Izio.Biblioteca.ModuloClasse.AtributoPropriedade">
            <summary>
            Atributo utilizado para nomear os parâmetros para preenchimento dinâmico.
            </summary>
            <remarks>Izio</remarks>
        </member>
        <member name="M:Izio.Biblioteca.ModuloClasse.ObterAtributoPropriedades``1">
            <summary>
            Retorna um dicionario com as propriedades e os atributos customizados.
            </summary>
            <typeparam name="tPe">Classe que sera utilizada para obter as propriedades e atributos.</typeparam>
            <returns>Lista com as propriedades e os atributos customizados.</returns>
            <remarks>Izio</remarks>
        </member>
        <member name="M:Izio.Biblioteca.ModuloClasse.PreencheClassePorDataReader``1(System.Data.IDataReader)">
            <summary>
            Retorna a lista da classe parametrizada corretamente populada.
            </summary>
            <typeparam name="tPe">Classe que será retornada como lista.</typeparam>
            <param name="dtr">DataReader para obter os dados e preencher a lista com as classes.</param>
            <returns>Lista da classe tipada enviada.</returns>
            <remarks>Izio</remarks>
        </member>
        <member name="M:Izio.Biblioteca.ModuloClasse.WriteCSV``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Convert uma lista generic em um arquivo CSV
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <param name="path"></param>
        </member>
        <member name="M:Izio.Biblioteca.Log.InserirLogIzio(System.String,Izio.Biblioteca.Model.DadosLog,System.Reflection.MethodBase)">
            <summary>
            Metodo para gravação do log e após a gravação do log, será retornado mensagem de erro de negocio
               para ser utilizada no retorno das APIs e nos Portais Izio
               
            O log será inserido na sislog
            </summary>
            <param name="sNomeCliente">Nome do cliente que será inserido o log</param>
            <param name="dadosLog">Objeto com os dados do log</param>
            <param name="metodoBase">Metodo que gerou o erro</param>
            <returns>Mensagem com o erro de negocio para ser apresentado nas APIs e Portais Izio</returns>
        </member>
        <member name="M:Izio.Biblioteca.Log.gerarLogViaArquivo(System.String,System.String)">
            <summary>
            Gerar o log em arquivo de texto, em caso de erro na gravação do log no banco de dados
            </summary>
            <param name="sNomeCliente">Nome do cliente</param>
            <param name="log">Texto do Log</param>
        </member>
        <member name="M:Izio.Biblioteca.FormatacaoCampos.ConverteStringMoeda(System.String)">
            <summary>
            Dado uma string em formato de moeda, este método retorna o valor Decimal correspondente ao valor
            </summary>
            <param name="valor"></param>
            <returns></returns>
        </member>
        <member name="M:Izio.Biblioteca.FormatacaoCampos.CampoGridVazio(System.String)">
            <summary>
            Verifica se um campo de um grid está vazio
            </summary>
            <param name="campo"></param>
            <returns></returns>
        </member>
        <member name="M:Izio.Biblioteca.FormatacaoCampos.ValidaCpf(System.String)">
            <summary>
            Valida o CPF 
            </summary>
            <param name="cpf">CPF para ser validado</param>
            <returns>Retorna true se for válido e false se for inválido.</returns>
        </member>
        <member name="M:Izio.Biblioteca.FormatacaoCampos.ValidaCNPJ(System.String)">
            <summary>
            Método de Validação de CNPJ
            </summary>
            <param name="vrCNPJ">Código do CNPJ</param>
        </member>
        <member name="M:Izio.Biblioteca.FormatacaoCampos.RetiraCaracteresEspeciais(System.String)">
            <summary>
            Retira os caracteres '/', '-' e '.' da string de entrada
            </summary>
            <param name="entrada">string de entrada</param>
            <returns>string sem os caracteres especiais</returns>
        </member>
        <member name="M:Izio.Biblioteca.FormatacaoCampos.RetiraAspasSimples(System.String)">
            <summary>
            Retira aspas simpses da string de entrada
            </summary>
            <param name="entrada">string de entrada</param>
            <returns>string sem os caracteres especiais</returns>
        </member>
        <member name="M:Izio.Biblioteca.FormatacaoCampos.FormataCPF(System.String)">
            <summary>
            Dada uma string, formata-a como CPF
            </summary>
            <param name="entrada">string de entrada</param>
            <returns>string formatada como CPF</returns>
        </member>
        <member name="M:Izio.Biblioteca.FormatacaoCampos.FormataCNPJ(System.String)">
            <summary>
            Dada uma string, formata-a como CNPJ
            </summary>
            <param name="entrada">string de entrada</param>
            <returns>string formatada como CNPJ</returns>
        </member>
        <member name="M:Izio.Biblioteca.FormatacaoCampos.FormataTelefone(System.String)">
            <summary>
            Dada uma string, formata-a como Telefone
            </summary>
            <param name="entrada">string de entrada</param>
            <returns>string formatada como Telefone</returns>
        </member>
        <member name="M:Izio.Biblioteca.FormatacaoCampos.FormataCep(System.String)">
            <summary>
            Dada uma string, formata-a como CEP
            </summary>
            <param name="entrada">string de entrada</param>
            <returns>string formatada como CEP</returns>
        </member>
        <member name="T:Izio.Biblioteca.Utilidades.ObjConfigCliente">
            <summary>
            Objeto com tipo de retorno de configuração do cliente
            </summary>
        </member>
        <member name="M:Izio.Biblioteca.Utilidades.ConverterDataSetParaCsv(System.Data.DataSet,System.String,System.String)">
            <summary>
            Gera um arquivo com os dados presentes no dataset
            Se já existir um arquivo com o mesmo nome, será sobrescrito
            </summary>
            <param name="dtSet"></param>
            <param name="caminhoGeracaoArquivo"></param>
            <param name="nomeArquivo"></param>
        </member>
        <member name="M:Izio.Biblioteca.Utilidades.ConverteObjectListParaHtmlTable(System.Object)">
            <summary>
            Recebe um objeto e devolve uma table em html
            </summary>
            <param name="obj">Objeto com os dados para montar a table</param>
        </member>
        <member name="M:Izio.Biblioteca.Utilidades.CalcularGrupoControle(System.Int32)">
            <summary>
            Calcula o tamanho do grupo de controle para uma determinada população
            </summary>
            <remarks>Calcula o tamanho do grupo de controle para uma determinada população</remarks>
            <param name="qtdClientes">População para calculo do grupo de controle</param>
            <returns>Tamanho do grupo de controle (tamanho da população de grupo de controle)</returns>
        </member>
    </members>
</doc>
