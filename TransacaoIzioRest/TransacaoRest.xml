<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TransacaoRest</name>
    </assembly>
    <members>
        <member name="M:TransacaoIzioRest.Controllers.TransacaoIzioRestController.ConsultaUltimasCompras(System.String,System.String,System.String)">
            <summary>
            Metodo para retonar as compras dos ultimos 6 meses do cliente
            </summary>
            <param name="tokenAutenticacao">Token de autorizacao para utilizacao da API</param>
            <param name="codigoPessoa">Codigo da pessoa para a consulta das compras</param>
            <param name="anoMes">Ano e mês (yyyyMM) para consulta das compras neste periodo</param>
        </member>
        <member name="M:TransacaoIzioRest.Controllers.TransacaoIzioRestController.ConsultaItensCompra(System.String,System.String)">
            <summary>
            Metodo para consultar os itens de uma compra
            </summary>
            <param name="tokenAutenticacao">Token de autorizacao para utilizacao da API</param>
            <param name="codigoTransacao">Codigo da transacao para a consulta dos itens da compra</param>
        </member>
        <member name="M:TransacaoIzioRest.Controllers.TransacaoIzioRestController.ImportaTransacao(TransacaoIzioRest.Models.DadosTransacaoOnline,System.String)">
            <summary>
            Realiza a importação da transação on-line para as tabelas finais do Izio
            </summary>
            <remarks>
            Importa as vendas para as tabelas finais do Izio
            Processamento On-line das Vendas.
            </remarks>
            <param name="objTransacao">Json com os dados de 1 venda (capa e os itens)</param>
            <param name="tokenAutenticacao">Token de autorizacao para utilizacao da api</param>
            <returns></returns>
        </member>
        <member name="M:TransacaoIzioRest.Controllers.TransacaoIzioRestController.ImportaLoteTransacoes(System.Collections.Generic.List{TransacaoIzioRest.Models.DadosTransacaoLote},System.String)">
            <summary>
            Realiza a importação em lote das transações carregadas em lotes para tabela intermediária do Izio
            </summary>
            <remarks>
            Método para importar as vendas em lote de 1000 em 1000 registros para a tabela intermediária do Izio
            
            As vendas importadas por este método serão processadas para as tabelas finais do Izio em processamento back.
            </remarks>
            <param name="objTransacao">Lote em Json com as vendas</param>
            <param name="tokenAutenticacao">Token de autorizacao para utilizacao da api</param>
            <returns></returns>
        </member>
        <member name="M:TransacaoIzioRest.Controllers.TransacaoIzioRestController.ExcluirRegistrosCompraCancelada(TransacaoIzioRest.Models.DadosTransacaoCancelada,System.String)">
            <summary>
            Realiza a exclusão dos registros de uma compra cancelada
            </summary>
            <param name="objTransacao">Dados da compra cancelada</param>
            <param name="tokenAutenticacao">Token de autorizacao para utilizacao da api</param>
            <returns></returns>
        </member>
        <member name="M:TransacaoIzioRest.Controllers.TransacaoIzioRestController.ExcluirRegistrosIntermediarios(System.String,System.String)">
            <summary>
            Realiza a exclusão dos registros intermediários para reprocessamento.
            </summary>
            <param name="tokenAutenticacao">Token de autorizacao para utilizacao da api</param>
            <param name="dataProcessamento">Data (yyyy-MM-dd) para exclusão processamento (deixar em branco para deletar tudo)</param>
            <returns></returns>
        </member>
        <member name="M:TransacaoIzioRest.Controllers.TransacaoIzioRestController.ConsultarTransacoesCarregadaEmLote(System.String,System.String)">
            <summary>
            Método para consultar os registros que foram enviados para Izio para a tabela intermédiária.
            </summary>
            <remarks>
            Consultar o total das vendas importadas em lote no Izio. As Vendas que foram carregadas na tabela intermediária
            </remarks>
            <param name="tokenAutenticacao">Token de autorizacao para utilizacao da api</param>
            <param name="dataImportacao">Data (yyyyMMdd) para consulta das transações (vendas) importadas em lote</param>
            <returns></returns>
        </member>
        <member name="M:TransacaoIzioRest.Controllers.TransacaoIzioRestController.ConsultaTotalDesconto(System.Int64,System.Int32)">
            <summary>
            Retorna o total de desconto que o cliente recebeu no periodo
            </summary>
            <param name="codigoPessoa">Codigo da pessoa para a consulta das compras</param>
            <param name="qtdMes"> consulta das compras neste periodo</param>
        </member>
        <member name="M:TransacaoIzioRest.Controllers.TransacaoIzioRestController.ConsumirFilaComprasEmLote(System.String,System.Int32)">
            <summary>
            Método para consumir a fila de compras enviadas em lote.
            </summary>
            <remarks>
            Método para consumir a fila (serviceBus) de compras enviadas em lote. As compras são inseridas na fila em lote de 200 registros no máximo.
            
            ### Processamento ###
            - Somente é permitido a execução com o token do Izio.
            - Lista de clientes enviada com valor 0, indica que todos os clientes serão processados.
            - Lista de clientes, quando tiver mais de um cliente, separar por virgula (Ex: 15,7,20).
            - O processamento será feito em paralelo entre os clientes, caso número de threads seja maior que 1.
            - As mensagens são lidas da fila, quando o lote lido inteirar 1000 registros é persistido na base o lote de compra.
            - As mensagens são apagadas da fila, somente se tiver ocorrido com sucesso a persistência no banco de dados.
            - As mensagens ficam na fila por 7 dias e depois são excluídas automaticamente.
            
            </remarks>
            <param name="listaClientes">Lista de clientes para o processamento</param>
            <param name="numThreads">Numero de threads para o processamento</param>
            <returns></returns>
        </member>
        <member name="M:TransacaoIzioRest.Controllers.TransacaoIzioRestController.ConsumirFilaCancelamentoLote(System.String,System.Int32)">
            <summary>
            Método para consumir a fila de compras canceladas
            </summary>
            <remarks>
            Método para consumir a fila (serviceBus) de compras canceladas. As compras canceladas que estão na fila, deverão ser enviadas para o datalake para exclusão.
            
            ### Processamento ###
            - Somente é permitido a execução com o token do Izio.
            - Lista de clientes enviada com valor 0, indica que todos os clientes serão processados.
            - Lista de clientes, quando tiver mais de um cliente, separar por virgula (Ex: 15,7,20).
            - O processamento será feito em paralelo entre os clientes, caso número de threads seja maior que 1.
            - As mensagens são lidas da fila, quando o lote lido inteirar 1000 registros é persistido no arquivo parquet.
            - As mensagens são apagadas da fila, somente se tiver ocorrido com sucesso a persistência no arquivo parquet.
            - As mensagens ficam na fila por 7 dias e depois são excluídas automaticamente.
            
            </remarks>
            <param name="listaClientes">Lista de clientes para o processamento</param>
            <param name="numThreads">Numero de threads para o processamento</param>
            <returns></returns>
        </member>
        <member name="T:TransacaoRest.Controllers.TransacaoCabecalhoController">
            <summary>
            Api das transações cabeçalhos
            </summary>
        </member>
        <member name="M:TransacaoRest.Controllers.TransacaoCabecalhoController.CadastrarTransacaoCabecalho(TransacaoIzioRest.Models.DadosTransacaoCabecalho)">
            <summary>
            Cadastrar uma Transação Cabeçalho
            </summary>
            <param name="dadosTransacaoCabecalho">Lista com os dados da transação cabeçalho</param>        
            <response code="400">Bad request</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="M:TransacaoRest.Controllers.TransacaoCabecalhoController.ConsultarTransacaoCabecalho(System.String,System.String)">
            <summary>
            Consultar uma Transação Cabeçalho
            </summary>
            <param name="codCpf">Cpf do cliente</param>
            <param name="dataProcessamento">Data para o processamento (yyyyMMdd)</param>
            <returns></returns>
        </member>
        <member name="M:TransacaoRest.Controllers.TransacaoCabecalhoController.AtualizarTransacaoCabecalho(TransacaoIzioRest.Models.DadosTransacaoCabecalhoPatch)">
            <summary>
            Atualizar parcialmente a Transação Cabeçalho
            </summary>
            <param name="dadosTransacaoCabecalhoPatch">Lista com os dados para atualização da transação cabeçalho</param>        
            <response code="400">Bad request</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="M:TransacaoRest.Controllers.TransacaoCabecalhoController.DeletarTransacaoCabecalho(System.Int32)">
            <summary>
            Deletar uma Transação Cabeçalho
            </summary>
            <param name="codTransacaoCabecalho">Código da Transação Cabeçalho</param>        
            <response code="400">Bad request</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="M:TransacaoRest.Controllers.TransacaoCabecalhoController.ImportarLoteTransacaoCabecalho(System.Collections.Generic.List{TransacaoIzioRest.Models.DadosTransacaoCabecalho})">
            <summary>
            Realiza a importação em lote das transações cabeçalhos
            </summary>
            <param name="listaTransacoesCabecalhos">Lista com os dados das transações cabeçalhos</param>        
            <remarks>
            Método para importar as vendas em lote de 1000 em 1000 registros
            Cadastrar uma ou mais Transações Cabeçalhos
            </remarks>
            <response code="400">Bad request</response>
            <response code="500">Internal Server Error</response>
        </member>
    </members>
</doc>
